version: '3'

services:
  expenses:
    image: 'rrromix/expenses:0.0.12'
    restart: always
    build:
      context: .
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      wish_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:postgresql://wish_db:5432/${DATABASE_NAME}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=61613
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - expenses
    restart: unless-stopped

  wish_db:
    image: 'postgres:13.1-alpine'
    restart: always
    container_name: wish_db
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - '5433:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672" # Standard RabbitMQ port
      - "15672:15672" # Management UI port
      - "61613:61613" # expose the STOMP port
    command: [ "bash", "-c", "rabbitmq-plugins enable rabbitmq_stomp --offline && rabbitmq-server" ]
  #    volumes:
  #      - rabbitmq_data:/var/lib/rabbitmq
  #      - rabbitmq_config:/etc/rabbitmq
  #      - rabbitmq_logs:/var/log/rabbitmq

volumes:
  db-data:
#  rabbitmq_data:
#  rabbitmq_config:
#  rabbitmq_logs: